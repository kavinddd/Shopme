name: Maven Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  builds:
    runs-on: ubuntu-latest
    

    steps:
    - uses: actions/checkout@v4

    - run: pwd

    - name: Set Up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'oracle'
        java-version: '17'
        java-package: 'jdk'

    - name: Maven build
      run: mvn -pl :ShopmeBackEnd -am clean install -DskipTests

    - run: echo "Successfully built"


    - run: echo "Building and pushing image is starting"

    - name: Build image and push
      uses: mr-smithers-excellent/docker-build-push@v6.2
      with:
        image: $DOCKER_IMAGE
        registry: "docker.io"
        username: ${{secrets.DOCKER_USERNAME}}
        password: ${{secrets.DOCKER_PASSWORD}}
        addLatest: true
      env:
        DOCKER_IMAGE: ${{vars.DOCKER_IMAGE}}

    - run: echo "Succesfully pushed the image"


    - run: echo "SSH(ing) to the server is now starting"

    - name: Add Host Key to known_hosts
      run: |
        mkdir ~/.ssh 
        touch ~/.ssh/known_hosts 
        ssh-keyscan -H "${{secrets.SSH_IP}}" >> ~/.ssh/known_hosts

    - name: Create Private key file
      run: |
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > rsa_id
        echo ./rsa_id 
        chmod 600 ./rsa_id

    - name: Prepare .env file to send through the server
      run: |
        touch .env
        echo MYSQL_DB_HOST=$MYSQL_DB_HOST >> .env
        echo MYSQL_DB_PORT=$MYSQL_DB_PORT >> .env
        echo MYSQL_DB_NAME=$MYSQL_DB_NAME >> .env
        echo MYSQL_DB_USERNAME=$MYSQL_DB_USERNAME >> .env
        echo MYSQL_DB_PASSWORD=$MYSQL_DB_PASSWORD >> .env
        echo CONTAINER_NAME=$CONTAINER_NAME >> .env
        echo DOCKER_IMAGE=$DOCKER_IMAGE >> .env

      env:
        MYSQL_DB_HOST: ${{secrets.MYSQL_DB_HOST}}
        MYSQL_DB_PORT: ${{secrets.MYSQL_DB_PORT}}
        MYSQL_DB_NAME: ${{secrets.MYSQL_DB_NAME}}
        MYSQL_DB_USERNAME: ${{secrets.MYSQL_DB_USERNAME}}
        MYSQL_DB_PASSWORD: ${{secrets.MYSQL_DB_PASSWORD}}
        CONTAINER_NAME: ${{vars.CONTAINER_NAME}}
        DOCKER_IMAGE: ${{vars.DOCKER_IMAGE}}


    - name: Send .env to the server using SCP
      run: |
        ls -la
        scp -i rsa_id -v .env "${{secrets.SSH_USERNAME}}@${{secrets.SSH_IP}}:"|| echo "SCP failed with exit code $?"

    - name: SSH into webserver machine & run deployment script
      run: ssh -i rsa_id -v "${{secrets.SSH_USERNAME}}@${{secrets.SSH_IP}}" "ls -la; whoami; ./deploy.sh"




